@{
    ViewData["Title"] = "Media Player";
    var currentTrack = Model.CurrentMedia;
    var currentState = Model.CurrentState;

    // Explicitly declare the type of MediaFiles
    var mediaFiles = Model.MediaFiles as List<StateDesignPattern.Models.TrackModel>;
    var isFirstTrack = mediaFiles != null && currentTrack != null && currentTrack == mediaFiles.FirstOrDefault();
    var isLastTrack = mediaFiles != null && currentTrack != null && currentTrack == mediaFiles.LastOrDefault();
}


<div class="container mt-4">
    <h1 class="text-center">Media Player</h1>

    @if (currentTrack != null)
    {
        <div class="card mb-3">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@currentTrack.Album.CoverMedium" class="img-fluid rounded-start" alt="Album Cover">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@currentTrack.Title</h5>
                        <p class="card-text"><strong>Artist:</strong> <a href="@currentTrack.Artist.Link" target="_blank">@currentTrack.Artist.Name</a></p>
                        <p class="card-text"><strong>Album:</strong> @currentTrack.Album.Title</p>
                        <p class="card-text"><strong>Duration:</strong> @TimeSpan.FromSeconds(currentTrack.Duration).ToString(@"mm\:ss")</p>
                        <p class="card-text"><strong>State:</strong> <span id="currentState">@currentState.Replace("State", "")</span></p>
                        <audio id="audioPlayer" controls>
                            <source src="@currentTrack.Preview" type="audio/mpeg">
                            Your browser does not support the audio element.
                        </audio>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            No tracks available. Please refresh to load songs.
        </div>
    }

    <div class="d-flex justify-content-center my-3">
        <button id="btnPrevious" class="btn btn-primary mx-2" @(isFirstTrack ? "disabled" : "")>Previous</button>
        <button id="btnPlay" class="btn btn-success mx-2" @(currentState == "PlayState" ? "disabled" : "")>Play</button>
        <button id="btnPause" class="btn btn-warning mx-2" @(currentState == "PauseState" ? "disabled" : "")>Pause</button>
        <button id="btnStop" class="btn btn-danger mx-2" @(currentState == "StopState" ? "disabled" : "")>Stop</button>
        <button id="btnNext" class="btn btn-primary mx-2" @(isLastTrack ? "disabled" : "")>Next</button>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var audioPlayer = document.getElementById('audioPlayer');

            // Update UI state dynamically
            function updateState(newState, isFirstTrack, isLastTrack) {
                $('#currentState').text(newState.replace("State", ""));
                $('#btnPlay').prop('disabled', newState === "PlayState");
                $('#btnPause').prop('disabled', newState === "PauseState");
                $('#btnStop').prop('disabled', newState === "StopState");
                $('#btnPrevious').prop('disabled', isFirstTrack);
                $('#btnNext').prop('disabled', isLastTrack);
            }

            $('#btnPlay').on('click', function () {
                if (audioPlayer) {
                    audioPlayer.play();
                }
                $.post('@Url.Action("Play")', function (response) {
                    updateState(response.state, null, null); // No need to update navigation buttons here
                });
            });

            $('#btnPause').on('click', function () {
                if (audioPlayer) {
                    audioPlayer.pause();
                }
                $.post('@Url.Action("Pause")', function (response) {
                    updateState(response.state, null, null); // No need to update navigation buttons here
                });
            });

            $('#btnStop').on('click', function () {
                if (audioPlayer) {
                    audioPlayer.pause();
                    audioPlayer.currentTime = 0; // Reset to the beginning
                }
                $.post('@Url.Action("Stop")', function (response) {
                    updateState(response.state, null, null); // No need to update navigation buttons here
                });
            });

            $('#btnNext').on('click', function () {
                $.post('@Url.Action("Next")', function (response) {
                    updateState(response.state, response.isFirstTrack, response.isLastTrack);
                    location.reload();
                });
            });

            $('#btnPrevious').on('click', function () {
                $.post('@Url.Action("Previous")', function (response) {
                    updateState(response.state, response.isFirstTrack, response.isLastTrack);
					location.reload();
                });
            });
        });
    </script>
}
